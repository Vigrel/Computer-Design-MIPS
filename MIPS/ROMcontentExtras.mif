-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions
-- and other software and tools, and its AMPP partner logic
-- functions, and any output files from any of the foregoing
-- (including device programming or simulation files), and any
-- associated documentation or information are expressly subject
-- to the terms and conditions of the Intel Program License
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.

WIDTH=32;
DEPTH=64;
ADDRESS_RADIX=DEC;
DATA_RADIX=HEX;

CONTENT BEGIN
      -- Valores iniciais no banco de registradores:
      -- $t0   (#8) := 0x00
      -- $t1   (#9) := 0x0A
      -- $t2  (#10) := 0x0B
      -- $t3  (#11) := 0x0C
      -- $t4  (#12) := 0x0D
      -- $t5  (#13) := 0x16

    0        :   01094827; --nor $t1 $t0 $t1 ($t1 := FFFFFFF5)
    1        :   000A4040; --sll $t0 $t2 0x1 ($t0 := 00000016)
    2        :   000A4042; --srl $t0 $t2 0x1 ($t0 := 00000005)
END;

-- NOR          opcode  rs    rt    rd   shamt funct
-- instrucao -> 000000 01001 01000 01001 00000 100111
-------------------------------------------------------
-- ULA_A     -> 1111 1111 1111 1111 1111 1111 1111 1111 
-- ULA_B     -> 1111 1111 1111 1111 1111 1111 1111 0101 
-- ULA_OUT   -> 1111 1111 1111 1111 1111 1111 1111 0101 


-- SLL          opcode  rs    rt    rd   shamt funct
-- instrucao -> 000000 00000 01010 01000 00001 000000
-------------------------------------------------------
-- ULA_A     -> 0000 0000 0000 0000 0000 0000 0000 0001 
-- ULA_B     -> 0000 0000 0000 0000 0000 0000 0000 1011 
-- ULA_OUT   -> 0000 0000 0000 0000 0000 0000 0001 0110  


-- SRL          opcode  rs    rt    rd   shamt funct
-- instrucao -> 000000 00000 01010 01000 00001 000010
-------------------------------------------------------
-- ULA_A     -> 0000 0000 0000 0000 0000 0000 0000 0001 
-- ULA_B     -> 0000 0000 0000 0000 0000 0000 0000 1011 
-- ULA_OUT   -> 0000 0000 0000 0000 0000 0000 0000 0101 