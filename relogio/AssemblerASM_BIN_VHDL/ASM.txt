LDI %R1 $1         	#Setup 
STA %R1 @1          
LDI %R1 $10     
STA %R1 @30         #Posicao de memória fixa = 10
LDI %R1 $2         #Posicao de memoria fixa = 2
STA %R1 @2  
LDI %R1 $4         #Posicao de memoria fixa = 4
STA %R1 @4
LDI %R1 $6         #Posicao de memoria fixa = 6
STA %R1 @6  
LDI %R0 $0       
STA %R0 @0
STA %R0 @10
STA %R0 @11
STA %R0 @12
STA %R0 @13
STA %R0 @14
STA %R0 @15
STA %R0 @288
STA %R0 @289
STA %R0 @290    
STA %R0 @291
STA %R0 @292
STA %R0 @293
STA %R0 @510
STA %R0 @511
STA %R0 @257
STA %R0 @506        #Se foi apertado, incrementa
STA %R0 @505
LDI %R2 $0        	#Registrador das unidades

LOOP:
LDA %R1 @356        #Checa botao de reset
CEQ %R1 @0
JEQ @0              #Se botao for pressionado vai para o inicio do programa

LDA %R1 @352           #CHECA SE USUARIO QUER MUDAR HORARIO
CEQ %R1 @0
JEQ @CHECA_INCREMENTO
JSR @ACERTA_HORARIO

CHECA_INCREMENTO:
LDA %R1 @357    	#Checa pro botao de incremento
CEQ %R1 @0
JEQ @CONTINUA         #Se nao foi apertado vai para continua
JMP @INCREMENTA

INCREMENTA:
LDI %R0 $1          #Se foi apertado, incrementa
STA %R0 @511        
ADDI %R2 $1
STA %R2 @10

CONTINUA:
CLT %R2 @30
JLT @SALVA_HEX  	#Se for menor que 10 salva no hex, caso contrario chama subrotina de overflow
JSR @OVERFLOW
SALVA_HEX:
STA %R2 @288
JMP @LOOP


OVERFLOW:       #Subrotina de overflow
LDI %R2 $0
STA %R2 @10
STA %R2 @288
LDA %R0 @11 	#Incrementa HEX1 e checa se é menor que 10, se for menor sai da subrotina
ADDI %R0 $1
CEQ %R0 @6
JEQ @HEX2
STA %R0 @289
STA %R0 @11
JMP @RETURN

HEX2:       #Incrementa HEX2 e checa se é menor que 10, se for menor sai da subrotina
LDI %R0 $0
STA %R0 @289
STA %R0 @11
LDA %R0 @12
ADDI %R0 $1
CEQ %R0 @30
JEQ @HEX3
STA %R0 @12
STA %R0 @290
JMP @RETURN

HEX3:           #Incrementa HEX3 e checa se é menor que 10, se for menor sai da subrotina
LDI %R0 $0
STA %R0 @290
STA %R0 @12
LDA %R0 @13
ADDI %R0 $1
CEQ %R0 @6
JEQ @HEX4
STA %R0 @13
STA %R0 @291
JMP @RETURN

HEX4:       #Incrementa HEX4 e checa se é menor que 10, se for menor sai da subrotina
LDI %R0 $0
STA %R0 @291
STA %R0 @13
LDA %R0 @14
ADDI %R0 $1
CEQ %R0 @30
JEQ @HEX5
STA %R0 @14
STA %R0 @292
CEQ %R0 @4
JEQ @ATINGIU_4
JMP @RETURN

ATINGIU_4:
LDA %R0 @15             #Ao HEX5 chegar em 2, checa se hex4 esta abaixo de 4
CEQ %R0 @2
JNE @RETURN
JMP @LIMPA

HEX5:       #Incrementa HEX5 e checa se é menor que 10, se for menor sai da subrotina
LDI %R0 $0
STA %R0 @292
STA %R0 @14
LDA %R0 @15
ADDI %R0 $1
STA %R0 @15
STA %R0 @293
JMP @RETURN

LIMPA:
LDI %R0 $0
STA %R0 @293
STA %R0 @15
STA %R0 @292
STA %R0 @14

RETURN:            #Sai da subrotina de overflow
RET 

ACERTA_HORARIO:
LDI %R0 $1
STA %R0 @510        #LIMPA KEY0
STA %R0 @256

LOOP_SEGUNDOS:
STA %R2 @288
STA %R2 @10
LDA %R0 @353           
CEQ %R0 @1
JEQ @INCREMENTA_SEGUNDOS
LDA %R0 @352 
CEQ %R0 @1
JEQ @RETURN_HORARIO
JMP @LOOP_SEGUNDOS

INCREMENTA_SEGUNDOS:
LDI %R0 $1
STA %R0 @509
ADDI %R2 $1
CLT %R2 @30
JLT @LOOP_SEGUNDOS
LDI %R2 $0
LDA %R3 @11
ADDI %R3 $1

CLT %R3 @6
STA %R3 @289
STA %R3 @11
JLT @LOOP_SEGUNDOS
LDI %R2 $0
STA %R2 @288
STA %R2 @10
STA %R2 @289
STA %R2 @11
JMP @LOOP_SEGUNDOS

RETURN_HORARIO:
LDI %R0 $1
STA %R0 @510 
LDI %R0 $0
STA %R0 @256
RET